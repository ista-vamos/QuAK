==26267== Memcheck, a memory error detector
==26267== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==26267== Using Valgrind-3.22.0-bd4db67b1d-20231031 and LibVEX; rerun with -h for copyright info
==26267== Command: ./chasm.out
==26267== Parent PID: 2940
==26267== 
--26267-- 
--26267-- Valgrind options:
--26267--    --leak-check=full
--26267--    --show-leak-kinds=all
--26267--    --track-origins=yes
--26267--    --verbose
--26267--    --log-file=valgrind-out.txt
--26267-- Contents of /proc/version:
--26267--   Linux version 6.8.0-35-generic (buildd@lcy02-amd64-020) (x86_64-linux-gnu-gcc-13 (Ubuntu 13.2.0-23ubuntu4) 13.2.0, GNU ld (GNU Binutils for Ubuntu) 2.42) #35-Ubuntu SMP PREEMPT_DYNAMIC Mon May 20 15:51:52 UTC 2024
--26267-- 
--26267-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand-rdseed
--26267-- Page sizes: currently 4096, max supported 4096
--26267-- Valgrind library directory: /usr/libexec/valgrind
--26267-- Reading syms from /home/ege/Desktop/repos/CHASM/program/bin/chasm.out
--26267-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--26267--   Considering /usr/lib/debug/.build-id/3e/81740f816ee1521a87e439c16ebfde46f147a5.debug ..
--26267--   .. build-id is valid
--26267-- Reading syms from /usr/libexec/valgrind/memcheck-amd64-linux
--26267--    object doesn't have a dynamic symbol table
--26267-- Scheduler: using generic scheduler lock implementation.
--26267-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==26267== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-26267-by-ege-on-???
==26267== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-26267-by-ege-on-???
==26267== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-26267-by-ege-on-???
==26267== 
==26267== TO CONTROL THIS PROCESS USING vgdb (which you probably
==26267== don't want to do, unless you know exactly what you're doing,
==26267== or are doing some strange experiment):
==26267==   /usr/bin/vgdb --pid=26267 ...command...
==26267== 
==26267== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==26267==   /path/to/gdb ./chasm.out
==26267== and then give GDB the following command
==26267==   target remote | /usr/bin/vgdb --pid=26267
==26267== --pid is optional if only one valgrind process is running
==26267== 
--26267-- REDIR: 0x4028b00 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c2e1a (???)
--26267-- REDIR: 0x40272b0 (ld-linux-x86-64.so.2:index) redirected to 0x580c2e34 (???)
--26267-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--26267-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
==26267== WARNING: new redirection conflicts with existing -- ignoring it
--26267--     old: 0x04028b00 (strlen              ) R-> (0000.0) 0x580c2e1a ???
--26267--     new: 0x04028b00 (strlen              ) R-> (2007.0) 0x0484f340 strlen
--26267-- REDIR: 0x40274e0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4850460 (strcmp)
--26267-- REDIR: 0x4026910 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4853cd0 (mempcpy)
--26267-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
--26267-- Reading syms from /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
--26267-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--26267--   Considering /usr/lib/debug/.build-id/08/134323d00289185684a4cd177d202f39c2a5f3.debug ..
--26267--   .. build-id is valid
--26267-- Reading syms from /usr/lib/x86_64-linux-gnu/libm.so.6
--26267-- REDIR: 0x4028ca0 (ld-linux-x86-64.so.2:strncmp) redirected to 0x484fc90 (strncmp)
--26267-- REDIR: 0x4bcd040 (libc.so.6:strnlen) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcd0d0 (libc.so.6:strpbrk) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcb190 (libc.so.6:strcmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4be43b0 (libc.so.6:wcsnlen) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bca280 (libc.so.6:memset) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4be3b20 (libc.so.6:wcslen) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4c4f3c0 (libc.so.6:__memcpy_chk) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bca1f0 (libc.so.6:memrchr) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4be4350 (libc.so.6:wcsncpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bc9710 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4be28e0 (libc.so.6:wcschr) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcb080 (libc.so.6:index) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcd100 (libc.so.6:rindex) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4be2990 (libc.so.6:wcscmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bca4a0 (libc.so.6:stpncpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bf0eb0 (libc.so.6:wmemchr) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bccee0 (libc.so.6:strncmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bca500 (libc.so.6:strcasecmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcc300 (libc.so.6:strcspn) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4be38f0 (libc.so.6:wcscpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcb010 (libc.so.6:strcat) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bccde0 (libc.so.6:strncasecmp_l) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcb100 (libc.so.6:strchrnul) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bc9620 (libc.so.6:bcmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcc290 (libc.so.6:strcpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bca5a0 (libc.so.6:strcasecmp_l) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcccb0 (libc.so.6:strlen) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bccf80 (libc.so.6:strncpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bf0f30 (libc.so.6:wmemcmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4c4f4e0 (libc.so.6:__memmove_chk) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
==26267== WARNING: new redirection conflicts with existing -- ignoring it
--26267--     old: 0x04ca09d0 (__memcpy_chk_avx_una) R-> (2030.0) 0x04853dd0 __memcpy_chk
--26267--     new: 0x04ca09d0 (__memcpy_chk_avx_una) R-> (2024.0) 0x04853740 __memmove_chk
--26267-- REDIR: 0x4bca430 (libc.so.6:stpcpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bc9fb0 (libc.so.6:memmove) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
==26267== Preferring higher priority redirection:
--26267--     old: 0x04ca0a00 (__memcpy_avx_unalign) R-> (2018.0) 0x04851580 __memcpy_avx_unaligned_erms
--26267--     new: 0x04ca0a00 (__memcpy_avx_unalign) R-> (2018.1) 0x04852d60 memmove
--26267-- REDIR: 0x4bc95a0 (libc.so.6:memchr) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bcd2d0 (libc.so.6:strspn) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bca0d0 (libc.so.6:mempcpy) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4bccd40 (libc.so.6:strncasecmp) redirected to 0x483d1c0 (_vgnU_ifunc_wrapper)
--26267-- REDIR: 0x4ca55f0 (libc.so.6:__strrchr_avx2) redirected to 0x484ed20 (rindex)
--26267-- REDIR: 0x4ca3740 (libc.so.6:__strlen_avx2) redirected to 0x484f220 (strlen)
--26267-- REDIR: 0x4ca02a0 (libc.so.6:__memcmp_avx2_movbe) redirected to 0x4852480 (bcmp)
--26267-- REDIR: 0x4ca4820 (libc.so.6:__strncmp_avx2) redirected to 0x484fab0 (strncmp)
--26267-- REDIR: 0x4bc5640 (libc.so.6:malloc) redirected to 0x48467b0 (malloc)
--26267-- REDIR: 0x49295c0 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x4846f30 (operator new(unsigned long))
--26267-- REDIR: 0x4ca0a00 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4852d60 (memmove)
--26267-- REDIR: 0x4ca2b60 (libc.so.6:__strchr_avx2) redirected to 0x484ef00 (index)
--26267-- REDIR: 0x4929620 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4848550 (operator new[](unsigned long))
--26267-- REDIR: 0x4ca0000 (libc.so.6:__memchr_avx2) redirected to 0x48504e0 (memchr)
--26267-- REDIR: 0x49277b0 (libstdc++.so.6:operator delete(void*)) redirected to 0x484a080 (operator delete(void*))
--26267-- REDIR: 0x49277e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x484bec0 (operator delete[](void*))
--26267-- REDIR: 0x4bc5d20 (libc.so.6:free) redirected to 0x4849820 (free)
--26267-- REDIR: 0x4ca1400 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x4852c50 (memset)
--26267-- REDIR: 0x49277c0 (libstdc++.so.6:operator delete(void*, unsigned long)) redirected to 0x484a530 (operator delete(void*, unsigned long))
--26267-- REDIR: 0x4ca09c0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x48538d0 (mempcpy)
==26267== Invalid write of size 8
==26267==    at 0x12882C: MapArray<State*>::insert(unsigned int, State*) (Map.cpp:87)
==26267==    by 0x1138BC: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:854)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e32030 is 0 bytes after a block of size 16 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x1287C6: MapArray<State*>::MapArray(unsigned int) (Map.cpp:71)
==26267==    by 0x1136B2: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:849)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 4
==26267==    at 0x10FB1F: compute_SCC_tag(State*, int*, int*, int*, int*, SetList<State*>*, bool*) (Automaton.cpp:356)
==26267==    by 0x10FF30: Automaton::compute_SCC() (Automaton.cpp:394)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e368b8 is 0 bytes after a block of size 8 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE42: Automaton::compute_SCC() (Automaton.cpp:382)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 1
==26267==    at 0x10FC04: compute_SCC_tag(State*, int*, int*, int*, int*, SetList<State*>*, bool*) (Automaton.cpp:360)
==26267==    by 0x10FF30: Automaton::compute_SCC() (Automaton.cpp:394)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e36952 is 0 bytes after a block of size 2 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE8E: Automaton::compute_SCC() (Automaton.cpp:384)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 1
==26267==    at 0x10F7D9: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:332)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e36952 is 0 bytes after a block of size 2 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE8E: Automaton::compute_SCC() (Automaton.cpp:384)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 4
==26267==    at 0x10F80D: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:333)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e368b8 is 0 bytes after a block of size 8 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE42: Automaton::compute_SCC() (Automaton.cpp:382)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 4
==26267==    at 0x10F833: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:333)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e36908 is 0 bytes after a block of size 8 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE7F: Automaton::compute_SCC() (Automaton.cpp:383)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid write of size 1
==26267==    at 0x10F718: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:328)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e36952 is 0 bytes after a block of size 2 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE8E: Automaton::compute_SCC() (Automaton.cpp:384)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Conditional jump or move depends on uninitialised value(s)
==26267==    at 0x10F83C: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:333)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Uninitialised value was created by a heap allocation
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE7F: Automaton::compute_SCC() (Automaton.cpp:383)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 1
==26267==    at 0x10F7D9: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:332)
==26267==    by 0x10F8E6: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:339)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e36953 is 1 bytes after a block of size 2 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE8E: Automaton::compute_SCC() (Automaton.cpp:384)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 4
==26267==    at 0x10F80D: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:333)
==26267==    by 0x10F8E6: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:339)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e368bc is 4 bytes after a block of size 8 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE42: Automaton::compute_SCC() (Automaton.cpp:382)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 4
==26267==    at 0x10F833: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:333)
==26267==    by 0x10F8E6: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:339)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e3690c is 4 bytes after a block of size 8 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE7F: Automaton::compute_SCC() (Automaton.cpp:383)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid write of size 1
==26267==    at 0x10F718: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:328)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10F8E6: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:339)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e36953 is 1 bytes after a block of size 2 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE8E: Automaton::compute_SCC() (Automaton.cpp:384)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 
==26267== Invalid read of size 1
==26267==    at 0x10F7D9: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:332)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10F8E6: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:339)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267==  Address 0x4e36958 is 6 bytes after a block of size 2 alloc'd
==26267==    at 0x48485C3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==26267==    by 0x10FE8E: Automaton::compute_SCC() (Automaton.cpp:384)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
==26267== 

valgrind: m_mallocfree.c:304 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 80, hi = 81999600.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==26267==    at 0x58044A9A: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x58044BDF: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x58044D75: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x5804EDB8: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x5803CDCA: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x5803B3E7: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x5803FFD0: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x5803A260: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x5800F80F: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==26267==    by 0x100960741A: ???
==26267==    by 0x10092B1F0F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 26267)
==26267==    at 0x10F80D: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:333)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10F8E6: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:339)
==26267==    by 0x10F8B1: compute_SCC_tree(State*, int*, int*, bool*, SCC_Tree*) (Automaton.cpp:336)
==26267==    by 0x10FF95: Automaton::compute_SCC() (Automaton.cpp:398)
==26267==    by 0x10BFB1: Automaton::Automaton(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, MapArray<Symbol*>*, MapArray<State*>*, MapArray<Weight*>*, int, int, State*) (Automaton.cpp:89)
==26267==    by 0x113B73: Automaton::toLimSup(Automaton const*, value_function_t) (Automaton.cpp:869)
==26267==    by 0x12655E: main (main.cpp:12)
client stack range: [0x1FFEFFD000 0x1FFF000FFF] client SP: 0x1FFEFFF590
valgrind stack range: [0x10091B2000 0x10092B1FFF] top usage: 18232 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

